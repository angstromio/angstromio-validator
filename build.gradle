subprojects {
    apply plugin: "maven-publish"
    apply plugin: "signing"
    
    project.afterEvaluate {
        
        def artifactName = "angstromio-" + project.name.minus('-lib')

        publishing {
            publications {
                mavenJava(MavenPublication) {
                    artifactId = artifactName
                    if (plugins.hasPlugin("java")) {
                        from components.java
                    }
                    versionMapping {
                        usage('java-api') {
                            fromResolutionOf('runtimeClasspath')
                        }
                        usage('java-runtime') {
                            fromResolutionResult()
                        }
                    }
            
                    pom {
                        name = "$project.name"
                        description = "$project.description"
                        url = String.format('https://angstrom.io/github/angstromio/%s/', 'angstromio-validator')
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        developers {
                            developer {
                                id = 'angstromio'
                                name = 'ångström.io'
                                email = 'github@angstrom.io'
                            }
                        }
                        scm {
                            connection = String.format('scm:git:git://github.com/angstromio/%s.git', 'angstromio-validator')
                            developerConnection = String.format('scm:git:ssh://github.com/angstromio/%s.git', 'angstromio-validator')
                            url = String.format('https://github.com/angstromio/%s', 'angstromio-validator')
                        }
                    }
                }

            }

            repositories {
                mavenCentral()
            }
        }

        signing {
            // sign publishing.publications.mavenJava
        }

    }
}